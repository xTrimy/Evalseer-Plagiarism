[2022-06-27 18:51:50.915939]
[[[7, 'using']], [[73, ')']], [[96, ')']], [[100, 'identifier']], [[169, '(']], [[233, '{']], [[152, '"']], [[173, '*']], [[219, '}']], [[248, ')']], [[241, 'identifier']], [[144, 'cout']], [[217, 'identifier']], [[71, ')']], [[154, '}']], [[91, ')']], [[199, '(']], [[72, '(']], [[143, '{']], [[89, '*']], [[234, 'identifier']], [[12, 'identifier']], [[51, 'identifier']], [[56, 'identifier']], [[9, 'identifier']], [[185, 'identifier']], [[168, ')']], [[196, ')']], [[8, 'namespace']], [[113, '!']], [[17, 'identifier']], [[59, 'identifier']], [[103, 'identifier']], [[170, ')']], [[146, 'identifier']], [[190, ')']], [[189, 'identifier']], [[206, ')']], [[58, '&']], [[102, '&']], [[92, '*']], [[216, 'identifier']], [[128, ')']], [[79, '*']], [[141, '(']], [[231, '(']], [[129, '}']], [[157, '=']], [[249, '}']], [[175, ')']], [[197, '&']], [[34, 'identifier']], [[245, ')']], [[187, 'identifier']], [[133, ')']], [[223, ')']], [[84, 'identifier']], [[159, 'identifier']], [[61, '&']], [[105, '&']], [[180, '*']], [[203, '*']], [[184, '}']], [[74, '&']], [[243, ')']], [[179, ')']], [[202, ')']], [[166, ')']], [[194, ')']], [[238, '++']], [[135, ')']], [[225, ')']], [[139, ')']], [[229, ')']], [[155, ')']], [[6, ';']], [[130, 'identifier']], [[60, 'unsigned']], [[104, 'unsigned']], [[188, ')']], [[250, '-']], [[68, 'identifier']], [[24, ')']], [[26, ')']], [[41, ')']], [[43, ')']], [[176, '{']], [[115, '&']], [[63, 'unsigned']], [[107, 'unsigned']], [[23, '-']], [[40, '-']], [[246, '&']], [[119, '&']], [[90, 'identifier']], [[33, 'char']], [[200, ')']], [[242, '{']], [[81, '&']], [[183, ')']], [[181, '++']], [[204, '++']], [[16, 'char']], [[114, 'identifier']], [[209, '}']], [[161, 'identifier']], [[21, '{']], [[38, '{']], [[221, 'unsigned']], [[86, 'char_literal']], [[101, 'const']], [[145, '(']], [[29, '&']], [[46, '&']], [[235, 'char_literal']], [[85, '(']], [[53, ')']], [[171, '(']], [[57, 'const']], [[62, ')']], [[106, ')']], [[88, ')']], [[172, ')']], [[87, '(']], [[120, '(']], [[212, 'void']], [[125, 'identifier']], [[191, '}']], [[83, ')']], [[165, '(']], [[193, '(']], [[98, 'static']], [[78, 'identifier']], [[215, '(']], [[251, ')']], [[15, 'constexpr']], [[14, ')']], [[247, '}']], [[134, '-']], [[224, '-']], [[198, 'identifier']], [[239, ')']], [[25, '-']], [[27, '-']], [[42, '-']], [[44, '-']], [[163, '}']], [[150, '{']], [[76, ')']], [[94, '}']], [[35, 'identifier']], [[11, '(']], [[18, 'char_literal']], [[19, 'char_literal']], [[36, 'char_literal']], [[116, ')']], [[111, '}']], [[66, 'const']], [[244, '-']], [[232, '(']], [[80, ')']], [[50, '.']], [[142, 'identifier']], [[164, '=']], [[211, 'identifier']], [[64, '&']], [[108, '&']], [[192, '=']], [[110, 'const']], [[136, 'virtual']], [[226, 'virtual']], [[47, ',']], [[31, ')']], [[122, ';']], [[52, '-']], [[149, 'cout']], [[10, 'constexpr']], [[236, 'identifier']], [[124, '*']], [[67, '\\']], [[218, '}']], [[210, '(']], [[123, '{']], [[54, 'virtual']], [[118, ')']], [[77, 'identifier']], [[151, 'string_literal']], [[214, 'constexpr']], [[126, '*']], [[131, 'const']], [[174, '++']], [[13, 'identifier']], [[48, '}']], [[137, '=']], [[227, '=']], [[220, 'identifier']], [[177, '(']], [[162, ')']], [[156, 'return']], [[70, '(']], [[140, '*']], [[230, '*']], [[160, 'identifier']], [[117, '&']], [[30, ')']], [[49, 'constexpr']]]

[2022-06-27 18:51:50.921384]
AStyle: 0

[2022-06-27 18:51:51.161655]
AStyle: 0

[2022-06-27 18:51:51.403665]
AStyle: 0

[2022-06-27 18:51:51.656380]
AStyle: 0

[2022-06-27 18:51:51.903407]
AStyle: 0

[2022-06-27 18:51:52.180342]
AStyle: 0

[2022-06-27 18:51:52.421056]
AStyle: 0

[2022-06-27 18:51:52.670821]
AStyle: 0

[2022-06-27 18:51:52.913488]
AStyle: 0

[2022-06-27 18:51:53.154388]
AStyle: 0

[2022-06-27 18:51:53.425473]
AStyle: 0

[2022-06-27 18:51:53.678287]
AStyle: 0

[2022-06-27 18:51:53.955444]
AStyle: 0

[2022-06-27 18:51:54.199868]
AStyle: 0

[2022-06-27 18:51:54.453347]
AStyle: 0

[2022-06-27 18:51:54.716810]
AStyle: 0

[2022-06-27 18:51:54.988891]
AStyle: 0

[2022-06-27 18:51:55.244331]
AStyle: 0

[2022-06-27 18:51:55.524328]
AStyle: 0

[2022-06-27 18:51:55.775002]
AStyle: 0

[2022-06-27 18:51:56.022102]
AStyle: 0

[2022-06-27 18:51:56.270505]
AStyle: 0

[2022-06-27 18:51:56.509277]
AStyle: 0

[2022-06-27 18:51:56.768519]
AStyle: 0

[2022-06-27 18:51:57.007049]
AStyle: 0

[2022-06-27 18:51:57.251187]
AStyle: 0

[2022-06-27 18:51:57.514798]
AStyle: 0

[2022-06-27 18:51:57.759805]
AStyle: 0

[2022-06-27 18:51:58.009447]
AStyle: 0

[2022-06-27 18:51:58.258370]
AStyle: 0

[2022-06-27 18:51:58.512877]
AStyle: 0

[2022-06-27 18:51:58.792403]
AStyle: 0

[2022-06-27 18:51:59.032763]
AStyle: 0

[2022-06-27 18:51:59.284762]
AStyle: 0

[2022-06-27 18:51:59.531213]
AStyle: 0

[2022-06-27 18:51:59.786837]
AStyle: 0

[2022-06-27 18:52:00.139486]
Found solution: {'status': 'success', 'solution': '# include <iostream>\nusing namespace std ;\nint n = 5 ;\nint w [ ] = { 3, 4, 5, 2, 6 } ;\nbool arr [ ] = { 0, 0, 0, 0, 0 } ;\nint W = 13 ;\nbool promising ( int i, int weight, int total )\n{\n    return ( ( weight + total >= W ) && ( ( weight == W ) || ( weight + w [ i ] <= W ) ) ) ;\n}\nvoid sumOfSubsets ( int i, int weight, int total )\n{\n    if ( promising ( i, weight, total ) ) if ( weight == W ) {\n            for ( int x = 0 ;\n                    x < n ;\n                    x ++ ) cout << arr [ x ] << " " ;\n        } else {\n            arr [ i ] = true ;\n            sumOfSubsets ( i + 1, weight + w [ i ], total - w [ i ] ) ;\n            arr [ i ] = false ;\n            sumOfSubsets ( i + 1, weight, total - w [ i ] ) ;\n        }\n}\nint main ( )\n{\n    int total = 0 ;\n    for ( int i = 0 ;\n            i < n ;\n            i ++ ) total += w [ i ] ;\n    sumOfSubsets ( 0, 0, total ) ;\n    return 0 ;\n}\n', 'token': 'cout', 'original_token': 'cut', 'line': 16, 'method': 2}

